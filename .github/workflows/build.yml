name: build-sysroot

on:
  pull_request:
    paths-ignore:
      - '*.md'
      - '**/*.md'
      - 'LICENSE*'
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - '**/*.md'
      - 'LICENSE*'
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    if: "!contains(github.event.pull_request.labels.*.name, 'skip ci')"
    runs-on: self-hosted
    env:
      MORELLOIE_DOWNLOAD_URL: "https://developer.arm.com/-/media/Arm%20Developer%20Community/Downloads/Morello/Development%20Tools/Morello%20Instruction%20Emulator"
      MUSL_GITREF: "morello/master"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.AUTO_UPDATE_TOKEN }}

      - name: Install system dependencies
        run: |
          sudo apt update -q=2
          sudo apt install -q=2 --yes --no-install-recommends --no-install-suggests curl git make

      - name: Parse versions
        id: parse-versions
        run: |
          case "${{ github.ref }}" in
            refs/tags/*)
              VERSIONS="${REF#v}"
              export MORELLOIE_VERSION="${VERSIONS%%+*}"
              export MORELLO_LLVM_VERSION="${VERSIONS#*+}"
              ;;
            *)
              MORELLOIE_FILENAME="$(curl -fsSL "https://developer.arm.com/downloads/-/morello-instruction-emulator" | grep -o -e 'Download morelloie-.*.sh' | cut -d ' ' -f 2 | sort -nr | head -n1)"
              export MORELLOIE_VERSION="$(echo ${${MORELLOIE_VERSION#morelloie-}%.tgz.sh})"
              MORELLO_LLVM_FILENAME="$(curl -fsSL https://git.morello-project.org/morello/llvm-project-releases/-/raw/main/README.md\?ref_type\=heads | grep -o -e 'morello-llvm-linux-[0-9.]*.tar.gz')"
              export MORELLO_LLVM_VERSION="$(echo ${${MORELLO_LLVM_FILENAME#morello-llvm-linux-}%.tar.gz})"
              ;;
          esac

          echo "Using morelloie version: ${MORELLOIE_VERSION}"
          echo "Using morelloie LLVM version: ${MORELLO_LLVM_VERSION}"

          echo "morelloie_version=${MORELLOIE_VERSION}" >> $GITHUB_OUTPUT
          echo "morello_llvm_version=${MORELLO_LLVM_VERSION}" >> $GITHUB_OUTPUT

      - name: Cache Morello IE
        id: cache-morelloie
        uses: actions/cache@v3
        with:
          key: morelloie-${{ steps.parse-versions.outputs.morelloie_version }}
          path: |
            ./morelloie-${{ steps.parse-versions.outputs.morelloie_version }}.tgz.sh

      - name: Download Morello IE
        if: steps.cache-morelloie.outputs.cache-hit != 'true'
        run: |
          curl -fSL "${MORELLOIE_DOWNLOAD_URL}/morelloie-${{ steps.parse-versions.outputs.morelloie_version }}.tgz.sh" -o "morelloie-${{ steps.parse-versions.outputs.morelloie_version }}.tgz.sh"

      - name: Install Morello IE
        run: |
          export MORELLOIE_PREFIX=${HOME}/morelloie
          export MORELLOIE=${MORELLOIE_PREFIX}/bin/morelloie

          rm -rf ${HOME}/morelloie-* ${MORELLOIE_PREFIX}
          bash "morelloie-${{ steps.parse-versions.outputs.morelloie_version }}.tgz.sh" --i-agree-to-the-contained-eula --prefix=${MORELLOIE_PREFIX}

      - name: Install Morello LLVM
        run: |
          export LLVM_PREFIX=${HOME}/llvm
          rm -rf ${LLVM_PREFIX}
          mkdir -p ${LLVM_PREFIX}
          pushd ${LLVM_PREFIX}
          git init
          repo=https://git.morello-project.org/morello/llvm-project-releases.git
          branch=morello/linux-aarch64-release-${{ steps.parse-versions.outputs.morello_llvm_version }}
          git fetch -- ${repo} +refs/heads/${branch}:refs/remotes/origin/${branch}
          git checkout origin/${branch} -b ${branch}
          popd

      - name: Checkout Musl sources
        run: |
          export MUSL_SOURCES=${HOME}/musl
          rm -rf ${MUSL_SOURCES}
          mkdir -p ${MUSL_SOURCES}
          pushd ${MUSL_SOURCES}
          git init
          repo=https://git.morello-project.org/morello/musl-libc.git
          gitref=${MUSL_GITREF}
          git fetch -- ${repo} +refs/heads/${gitref}:refs/remotes/origin/${gitref}
          git checkout origin/${gitref} -b ${gitref}
          popd

      - name: Build Musl Sysroot for Purecap
        run: |
          export MUSL_PREFIX_PURECAP=${HOME}/musl-sysroot-purecap
          export MUSL_SOURCES=${HOME}/musl
          export LLVM_PREFIX=${HOME}/llvm
          pushd ${MUSL_SOURCES}
          make distclean
          CC=${LLVM_PREFIX}/bin/clang ./configure --prefix=${MUSL_PREFIX_PURECAP} --target=aarch64-linux-musl_purecap
          make -j`nproc`
          make install
          popd

      - name: Build Musl Sysroot for Hybrid
        run: |
          export MUSL_PREFIX_HYBRID=${HOME}/musl-sysroot-hybrid
          export MUSL_SOURCES=${HOME}/musl
          export LLVM_PREFIX=${HOME}/llvm
          pushd ${MUSL_SOURCES}
          make distclean
          CC=${LLVM_PREFIX}/bin/clang ./configure --prefix=${MUSL_PREFIX_HYBRID} --disable-morello --target=aarch64-linux-gnu
          make -j`nproc`
          make install
          popd

      - name: Create tarball
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd ${HOME}/musl-sysroot-purecap
          tar -czf /tmp/musl-sysroot-purecap.tar.gz .
          cd ${HOME}/musl-sysroot-hybrid
          tar -czf /tmp/musl-sysroot-hybrid.tar.gz .

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: /tmp/musl-sysroot-*.tar.gz
